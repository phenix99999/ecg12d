{"ast":null,"code":"var keyStr='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';export default{encode:function encode(input){var output=[];var chr1,chr2,chr3=\"\";var enc1,enc2,enc3,enc4=\"\";var i=0;do{chr1=input.charCodeAt(i++);chr2=input.charCodeAt(i++);chr3=input.charCodeAt(i++);enc1=chr1>>2;enc2=(chr1&3)<<4|chr2>>4;enc3=(chr2&15)<<2|chr3>>6;enc4=chr3&63;if(isNaN(chr2)){enc3=enc4=64;}else if(isNaN(chr3)){enc4=64;}output.push(keyStr.charAt(enc1)+keyStr.charAt(enc2)+keyStr.charAt(enc3)+keyStr.charAt(enc4));chr1=chr2=chr3=\"\";enc1=enc2=enc3=enc4=\"\";}while(i<input.length);return output.join('');},encodeFromByteArray:function encodeFromByteArray(input){var output=[];var chr1,chr2,chr3=\"\";var enc1,enc2,enc3,enc4=\"\";var i=0;do{chr1=input[i++];chr2=input[i++];chr3=input[i++];enc1=chr1>>2;enc2=(chr1&3)<<4|chr2>>4;enc3=(chr2&15)<<2|chr3>>6;enc4=chr3&63;if(isNaN(chr2)){enc3=enc4=64;}else if(isNaN(chr3)){enc4=64;}output.push(keyStr.charAt(enc1)+keyStr.charAt(enc2)+keyStr.charAt(enc3)+keyStr.charAt(enc4));chr1=chr2=chr3=\"\";enc1=enc2=enc3=enc4=\"\";}while(i<input.length);return output.join('');},decode:function decode(input){var output=\"\";var chr1,chr2,chr3=\"\";var enc1,enc2,enc3,enc4=\"\";var i=0;var base64test=/[^A-Za-z0-9\\+\\/\\=]/g;if(base64test.exec(input)){throw new Error(\"There were invalid base64 characters in the input text.\\n\"+\"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\n\"+\"Expect errors in decoding.\");}input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!=64){output=output+String.fromCharCode(chr2);}if(enc4!=64){output=output+String.fromCharCode(chr3);}chr1=chr2=chr3=\"\";enc1=enc2=enc3=enc4=\"\";}while(i<input.length);return output;}};","map":{"version":3,"sources":["/Users/lyestamazouzt/Projects/CoffretsPrestige/node_modules/react-native-base64/base64.js"],"names":["keyStr","encode","input","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","i","charCodeAt","isNaN","push","charAt","length","join","encodeFromByteArray","decode","base64test","exec","Error","replace","indexOf","String","fromCharCode"],"mappings":"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","sourcesContent":["let keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\nexport default {\r\n    encode: function (input) {\r\n        var output = [];\r\n        var chr1, chr2, chr3 = \"\";\r\n        var enc1, enc2, enc3, enc4 = \"\";\r\n        var i = 0;\r\n\r\n        do {\r\n            chr1 = input.charCodeAt(i++);\r\n            chr2 = input.charCodeAt(i++);\r\n            chr3 = input.charCodeAt(i++);\r\n\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            } else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n\r\n            output.push(\r\n                keyStr.charAt(enc1) +\r\n                keyStr.charAt(enc2) +\r\n                keyStr.charAt(enc3) +\r\n                keyStr.charAt(enc4))\r\n            chr1 = chr2 = chr3 = \"\";\r\n            enc1 = enc2 = enc3 = enc4 = \"\";\r\n        } while (i < input.length);\r\n\r\n        return output.join('');\r\n    },\r\n\r\n    encodeFromByteArray: function (input) {\r\n        var output = [];\r\n        var chr1, chr2, chr3 = \"\";\r\n        var enc1, enc2, enc3, enc4 = \"\";\r\n        var i = 0;\r\n\r\n        do {\r\n            chr1 = input[i++];\r\n            chr2 = input[i++];\r\n            chr3 = input[i++];\r\n\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            } else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n\r\n            output.push(\r\n                keyStr.charAt(enc1) +\r\n                keyStr.charAt(enc2) +\r\n                keyStr.charAt(enc3) +\r\n                keyStr.charAt(enc4))\r\n            chr1 = chr2 = chr3 = \"\";\r\n            enc1 = enc2 = enc3 = enc4 = \"\";\r\n        } while (i < input.length);\r\n\r\n        return output.join('');\r\n    },\r\n\r\n    decode: function (input) {\r\n        var output = \"\";\r\n        var chr1, chr2, chr3 = \"\";\r\n        var enc1, enc2, enc3, enc4 = \"\";\r\n        var i = 0;\r\n\r\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\r\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\r\n        if (base64test.exec(input)) {\r\n            throw new Error(\"There were invalid base64 characters in the input text.\\n\" +\r\n              \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\n\" +\r\n              \"Expect errors in decoding.\");\r\n        }\r\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n\r\n        do {\r\n            enc1 = keyStr.indexOf(input.charAt(i++));\r\n            enc2 = keyStr.indexOf(input.charAt(i++));\r\n            enc3 = keyStr.indexOf(input.charAt(i++));\r\n            enc4 = keyStr.indexOf(input.charAt(i++));\r\n\r\n            chr1 = (enc1 << 2) | (enc2 >> 4);\r\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n            chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n            output = output + String.fromCharCode(chr1);\r\n\r\n            if (enc3 != 64) {\r\n                output = output + String.fromCharCode(chr2);\r\n            }\r\n            if (enc4 != 64) {\r\n                output = output + String.fromCharCode(chr3);\r\n            }\r\n\r\n            chr1 = chr2 = chr3 = \"\";\r\n            enc1 = enc2 = enc3 = enc4 = \"\";\r\n\r\n        } while (i < input.length);\r\n\r\n        return output;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}