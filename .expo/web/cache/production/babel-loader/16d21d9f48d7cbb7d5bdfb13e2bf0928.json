{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{AsyncStorage}from\"react-native-web/dist/index\";var NAVIGATION_KEY='NAVIGATION_KEY';export function setNavigationState(screen){return _regeneratorRuntime.async(function setNavigationState$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(AsyncStorage.setItem(NAVIGATION_KEY,screen));case 3:_context.next=8;break;case 5:_context.prev=5;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\");case 8:case\"end\":return _context.stop();}}},null,null,[[0,5]],Promise);}export function getNavigationState(){var value;return _regeneratorRuntime.async(function getNavigationState$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return _regeneratorRuntime.awrap(AsyncStorage.getItem(NAVIGATION_KEY));case 3:value=_context2.sent;if(!(value!==null&&(value==='Login'||value==='Logout'))){_context2.next=6;break;}return _context2.abrupt(\"return\",value);case 6:return _context2.abrupt(\"return\",'Logout');case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);return _context2.abrupt(\"return\",'Logout');case 12:case\"end\":return _context2.stop();}}},null,null,[[0,9]],Promise);}","map":{"version":3,"sources":["/Users/lyestamazouzt/Projects/CoffretsPrestige/src/utils/PersistState.ts"],"names":["AsyncStorage","NAVIGATION_KEY","setNavigationState","screen","setItem","getNavigationState","getItem","value"],"mappings":"mEACSA,Y,mCACT,GAAMC,CAAAA,cAAc,CAAG,gBAAvB,CAGA,MAAO,SAAeC,CAAAA,kBAAf,CAAkCC,MAAlC,+LAEOH,YAAY,CAACI,OAAb,CAAqBH,cAArB,CAAqCE,MAArC,CAFP,gMAQP,MAAO,SAAeE,CAAAA,kBAAf,+MAEqBL,YAAY,CAACM,OAAb,CAAqBL,cAArB,CAFrB,SAEOM,KAFP,qBAGKA,KAAK,GAAK,IAAV,GAAmBA,KAAK,GAAK,OAAV,EAAqBA,KAAK,GAAK,QAAlD,CAHL,4DAIYA,KAJZ,0CAMQ,QANR,8FAQQ,QARR","sourcesContent":["\nimport { AsyncStorage } from 'react-native';\nconst NAVIGATION_KEY = 'NAVIGATION_KEY'\nexport type Screen = 'Login' | 'Logout'\n\nexport async function setNavigationState(screen: Screen) {\n    try {\n        await AsyncStorage.setItem(NAVIGATION_KEY, screen);\n    } catch (error) {\n        return\n    }\n}\n\nexport async function getNavigationState(): Promise<Screen> {\n    try {\n        const value = await AsyncStorage.getItem(NAVIGATION_KEY);\n        if (value !== null && (value === 'Login' || value === 'Logout')) {\n            return value as Screen\n        }\n        return 'Logout'\n    } catch (error) {\n        return 'Logout'\n    }\n}"]},"metadata":{},"sourceType":"module"}