{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _objectSpread from\"@babel/runtime/helpers/objectSpread\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import NativeInterface from\"./nativeInterface\";import InternetReachability from\"./internetReachability\";import*as PrivateTypes from\"./privateTypes\";var State=function State(configuration){var _this=this;_classCallCheck(this,State);this._nativeEventSubscription=null;this._subscriptions=new Set();this._latestState=null;this._handleNativeStateUpdate=function(state){_this._internetReachability.update(state);var convertedState=_this._convertState(state);_this._latestState=convertedState;_this._subscriptions.forEach(function(handler){return handler(convertedState);});};this._handleInternetReachabilityUpdate=function(isInternetReachable){if(!_this._latestState){return;}var nextState=_objectSpread({},_this._latestState,{isInternetReachable:isInternetReachable});_this._latestState=nextState;_this._subscriptions.forEach(function(handler){return handler(nextState);});};this._fetchCurrentState=function _callee(requestedInterface){var state,convertedState;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(NativeInterface.getCurrentState(requestedInterface));case 2:state=_context.sent;_this._internetReachability.update(state);convertedState=_this._convertState(state);if(!requestedInterface){_this._latestState=convertedState;}return _context.abrupt(\"return\",convertedState);case 7:case\"end\":return _context.stop();}}},null,this);};this._convertState=function(input){if(typeof input.isInternetReachable==='boolean'){return input;}else{return _objectSpread({},input,{isInternetReachable:_this._internetReachability.currentState()});}};this.latest=function(requestedInterface){if(requestedInterface){return _this._fetchCurrentState(requestedInterface);}else if(_this._latestState){return Promise.resolve(_this._latestState);}else{return _this._fetchCurrentState();}};this.add=function(handler){_this._subscriptions.add(handler);if(_this._latestState){handler(_this._latestState);}else{_this.latest().then(handler);}};this.remove=function(handler){_this._subscriptions.delete(handler);};this.tearDown=function(){if(_this._internetReachability){_this._internetReachability.tearDown();}if(_this._nativeEventSubscription){_this._nativeEventSubscription.remove();}_this._subscriptions.clear();};this._internetReachability=new InternetReachability(configuration,this._handleInternetReachabilityUpdate);this._nativeEventSubscription=NativeInterface.eventEmitter.addListener(PrivateTypes.DEVICE_CONNECTIVITY_EVENT,this._handleNativeStateUpdate);this._fetchCurrentState();};export{State as default};","map":{"version":3,"sources":["state.ts"],"names":["State","_nativeEventSubscription","_subscriptions","_latestState","NativeInterface","PrivateTypes","convertedState","handler","nextState","isInternetReachable","state","input","Promise"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport {NativeEventSubscription} from 'react-native';\nimport NativeInterface from './nativeInterface';\nimport InternetReachability from './internetReachability';\nimport * as Types from './types';\nimport * as PrivateTypes from './privateTypes';\n\nexport default class State {\n  private _nativeEventSubscription: NativeEventSubscription | null = null;\n  private _subscriptions = new Set<Types.NetInfoChangeHandler>();\n  private _latestState: Types.NetInfoState | null = null;\n  private _internetReachability: InternetReachability;\n\n  constructor(configuration: Types.NetInfoConfiguration) {\n    // Add the listener to the internet connectivity events\n    this._internetReachability = new InternetReachability(\n      configuration,\n      this._handleInternetReachabilityUpdate,\n    );\n\n    // Add the subscription to the native events\n    this._nativeEventSubscription = NativeInterface.eventEmitter.addListener(\n      PrivateTypes.DEVICE_CONNECTIVITY_EVENT,\n      this._handleNativeStateUpdate,\n    );\n\n    // Fetch the current state from the native module\n    this._fetchCurrentState();\n  }\n\n  private _handleNativeStateUpdate = (\n    state: PrivateTypes.NetInfoNativeModuleState,\n  ): void => {\n    // Update the internet reachability module\n    this._internetReachability.update(state);\n\n    // Convert the state from native to JS shape\n    const convertedState = this._convertState(state);\n\n    // Update the listeners\n    this._latestState = convertedState;\n    this._subscriptions.forEach((handler): void => handler(convertedState));\n  };\n\n  private _handleInternetReachabilityUpdate = (\n    isInternetReachable: boolean | null | undefined,\n  ): void => {\n    if (!this._latestState) {\n      return;\n    }\n\n    const nextState = {\n      ...this._latestState,\n      isInternetReachable,\n    } as Types.NetInfoState;\n    this._latestState = nextState;\n    this._subscriptions.forEach((handler): void => handler(nextState));\n  };\n\n  private _fetchCurrentState = async (\n    requestedInterface?: string,\n  ): Promise<Types.NetInfoState> => {\n    const state = await NativeInterface.getCurrentState(requestedInterface);\n\n    // Update the internet reachability module\n    this._internetReachability.update(state);\n    // Convert and store the new state\n    const convertedState = this._convertState(state);\n    if (!requestedInterface) {\n      this._latestState = convertedState;\n    }\n\n    return convertedState;\n  };\n\n  private _convertState = (\n    input: PrivateTypes.NetInfoNativeModuleState,\n  ): Types.NetInfoState => {\n    if (typeof input.isInternetReachable === 'boolean') {\n      return input as Types.NetInfoState;\n    } else {\n      return {\n        ...input,\n        isInternetReachable: this._internetReachability.currentState(),\n      } as Types.NetInfoState;\n    }\n  };\n\n  public latest = (\n    requestedInterface?: string,\n  ): Promise<Types.NetInfoState> => {\n    if (requestedInterface) {\n      return this._fetchCurrentState(requestedInterface);\n    } else if (this._latestState) {\n      return Promise.resolve(this._latestState);\n    } else {\n      return this._fetchCurrentState();\n    }\n  };\n\n  public add = (handler: Types.NetInfoChangeHandler): void => {\n    // Add the subscription handler to our set\n    this._subscriptions.add(handler);\n\n    // Send it the latest data we have\n    if (this._latestState) {\n      handler(this._latestState);\n    } else {\n      this.latest().then(handler);\n    }\n  };\n\n  public remove = (handler: Types.NetInfoChangeHandler): void => {\n    this._subscriptions.delete(handler);\n  };\n\n  public tearDown = (): void => {\n    if (this._internetReachability) {\n      this._internetReachability.tearDown();\n    }\n\n    if (this._nativeEventSubscription) {\n      this._nativeEventSubscription.remove();\n    }\n\n    this._subscriptions.clear();\n  };\n}\n"]},"metadata":{},"sourceType":"module"}