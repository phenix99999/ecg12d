{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _initializerDefineProperty from\"@babel/runtime/helpers/initializerDefineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _applyDecoratedDescriptor from\"@babel/runtime/helpers/applyDecoratedDescriptor\";import _initializerWarningHelper from\"@babel/runtime/helpers/initializerWarningHelper\";var _class,_descriptor,_descriptor2,_descriptor3,_descriptor4,_temp;import{observable,action}from'mobx';import{persist}from'mobx-persist';import{setNavigationState}from\"../utils/PersistState\";import{decode as atob,encode as btoa}from'base-64';var AuthStore=(_class=(_temp=function(){function AuthStore(rootStore){_classCallCheck(this,AuthStore);_initializerDefineProperty(this,\"username\",_descriptor,this);_initializerDefineProperty(this,\"password\",_descriptor2,this);_initializerDefineProperty(this,\"token\",_descriptor3,this);_initializerDefineProperty(this,\"authLoading\",_descriptor4,this);this.rootStore=rootStore;}_createClass(AuthStore,[{key:\"getAuthHeader\",value:function getAuthHeader(){return'Basic '+this.token;}},{key:\"setToken\",value:function setToken(){this.token=btoa(this.username+\":\"+this.password);}},{key:\"extractToken\",value:function extractToken(){return atob(this.token);}},{key:\"login\",value:function login(){var _this=this;this.authLoading=true;return this.rootStore.api.isAuthorized().then(function _callee(isAuthorized){return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!isAuthorized){_context.next=6;break;}_this.password='';_this.username='';_context.next=5;return _regeneratorRuntime.awrap(setNavigationState('Login'));case 5:return _context.abrupt(\"return\",isAuthorized);case 6:return _context.abrupt(\"return\",isAuthorized);case 7:case\"end\":return _context.stop();}}},null,null,null,Promise);}).finally(function(){_this.authLoading=false;});}},{key:\"logout\",value:function logout(){setNavigationState('Logout');this.username='';this.password='';}}]);return AuthStore;}(),_temp),(_descriptor=_applyDecoratedDescriptor(_class.prototype,\"username\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return\"\";}}),_descriptor2=_applyDecoratedDescriptor(_class.prototype,\"password\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return\"\";}}),_descriptor3=_applyDecoratedDescriptor(_class.prototype,\"token\",[persist,observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return\"\";}}),_descriptor4=_applyDecoratedDescriptor(_class.prototype,\"authLoading\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return false;}}),_applyDecoratedDescriptor(_class.prototype,\"setToken\",[action],Object.getOwnPropertyDescriptor(_class.prototype,\"setToken\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"extractToken\",[action],Object.getOwnPropertyDescriptor(_class.prototype,\"extractToken\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"login\",[action],Object.getOwnPropertyDescriptor(_class.prototype,\"login\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"logout\",[action],Object.getOwnPropertyDescriptor(_class.prototype,\"logout\"),_class.prototype)),_class);export{AuthStore as default};","map":{"version":3,"sources":["/Users/lyestamazouzt/Projects/CoffretsPrestige/src/stores/AuthStore.ts"],"names":["observable","action","persist","setNavigationState","decode","atob","encode","btoa","AuthStore","rootStore","token","username","password","authLoading","api","isAuthorized","then","finally"],"mappings":"ugBAAA,OAASA,UAAT,CAA+BC,MAA/B,KAA6C,MAA7C,CACA,OAASC,OAAT,KAAwB,cAAxB,CAEA,OAASC,kBAAT,6BACA,OAASC,MAAM,GAAIC,CAAAA,IAAnB,CAAyBC,MAAM,GAAIC,CAAAA,IAAnC,KAA+C,SAA/C,C,GAGqBC,CAAAA,S,2BAUjB,mBAAYC,SAAZ,CAAkC,wRAC9B,KAAKA,SAAL,CAAiBA,SAAjB,CACH,C,2EAEe,CACZ,MAAO,SAAW,KAAKC,KAAvB,CACH,C,2CAGU,CACP,KAAKA,KAAL,CAAaH,IAAI,CAAI,KAAKI,QAAT,KAAqB,KAAKC,QAA1B,CAAjB,CACH,C,mDAGc,CACX,MAAOP,CAAAA,IAAI,CAAC,KAAKK,KAAN,CAAX,CACH,C,qCAGO,gBACJ,KAAKG,WAAL,CAAmB,IAAnB,CAEA,MAAO,MAAKJ,SAAL,CAAeK,GAAf,CAAmBC,YAAnB,GACFC,IADE,CACG,iBAAOD,YAAP,uHAEEA,YAFF,yBAGE,KAAI,CAACH,QAAL,CAAgB,EAAhB,CACA,KAAI,CAACD,QAAL,CAAgB,EAAhB,CAJF,iDAKQR,kBAAkB,CAAC,OAAD,CAL1B,yCAMSY,YANT,yCAQKA,YARL,uEADH,EAWFE,OAXE,CAWM,UAAM,CACX,KAAI,CAACJ,WAAL,CAAmB,KAAnB,CACH,CAbE,CAAP,CAcH,C,uCAEgB,CACbV,kBAAkB,CAAC,QAAD,CAAlB,CACA,KAAKQ,QAAL,CAAgB,EAAhB,CACA,KAAKC,QAAL,CAAgB,EAAhB,CACH,C,oGAhDAZ,U,4FAAsB,E,yEACtBA,U,4FAAsB,E,sEACtBE,O,CAASF,U,4FAAmB,E,4EAE5BA,U,4FAAyB,M,4DAUzBC,M,4IAKAA,M,yIAKAA,M,mIAoBAA,M,+FAhDgBO,S","sourcesContent":["import { observable, computed, action } from 'mobx';\nimport { persist } from 'mobx-persist';\nimport { RootStore } from './index';\nimport { setNavigationState } from '../utils/PersistState'\nimport { decode as atob, encode as btoa } from 'base-64'\n\n\nexport default class AuthStore {\n\n    rootStore: RootStore;\n\n    @observable username = \"\";\n    @observable password = \"\";\n    @persist @observable token = \"\";\n\n    @observable authLoading = false;\n\n    constructor(rootStore: RootStore) {\n        this.rootStore = rootStore;\n    }\n\n    getAuthHeader() {\n        return 'Basic ' + this.token;\n    }\n\n    @action\n    setToken() {\n        this.token = btoa(`${this.username}:${this.password}`);\n    }\n\n    @action\n    extractToken() {\n        return atob(this.token);\n    }\n\n    @action\n    login() {\n        this.authLoading = true\n\n        return this.rootStore.api.isAuthorized()\n            .then(async (isAuthorized: boolean) => {\n\n                if (isAuthorized) {\n                    this.password = ''\n                    this.username = ''\n                    await setNavigationState('Login')\n                    return isAuthorized\n                }\n                return isAuthorized\n            })\n            .finally(() => {\n                this.authLoading = false\n            })\n    }\n\n    @action logout() {\n        setNavigationState('Logout')\n        this.username = ''\n        this.password = ''\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}