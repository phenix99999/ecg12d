{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import AuthStore from\"./AuthStore\";import TimeStore from\"./TimeStore\";import{create}from'mobx-persist';import{AsyncStorage}from\"react-native-web/dist/index\";var hydrate=create({storage:AsyncStorage,jsonify:true});export var RootStore=function RootStore(){_classCallCheck(this,RootStore);this.authStore=new AuthStore(this);this.timeStore=new TimeStore(this);hydrate('auth',this.authStore);};export var rootStore=new RootStore();var stores={rootStore:rootStore,authStore:rootStore.authStore,timeStore:rootStore.timeStore};export default stores;","map":{"version":3,"sources":["/Users/lyestamazouzt/Projects/CoffretsPrestige/src/stores/index.ts"],"names":["AuthStore","TimeStore","create","AsyncStorage","hydrate","storage","jsonify","RootStore","authStore","timeStore","rootStore","stores"],"mappings":"mEAAA,MAAOA,CAAAA,SAAP,mBAEA,MAAOC,CAAAA,SAAP,mBACA,OAASC,MAAT,KAAuB,cAAvB,C,OACSC,Y,mCAIT,GAAMC,CAAAA,OAAO,CAAGF,MAAM,CAAC,CACrBG,OAAO,CAAEF,YADY,CAErBG,OAAO,CAAE,IAFY,CAAD,CAAtB,CAKA,UAAaC,CAAAA,SAAb,CAKE,oBAAc,iCACZ,KAAKC,SAAL,CAAiB,GAAIR,CAAAA,SAAJ,CAAc,IAAd,CAAjB,CAEA,KAAKS,SAAL,CAAiB,GAAIR,CAAAA,SAAJ,CAAc,IAAd,CAAjB,CACAG,OAAO,CAAC,MAAD,CAAS,KAAKI,SAAd,CAAP,CACD,CAVH,CAaA,MAAO,IAAME,CAAAA,SAAS,CAAG,GAAIH,CAAAA,SAAJ,EAAlB,CAEP,GAAMI,CAAAA,MAAM,CAAG,CACbD,SAAS,CAATA,SADa,CAEbF,SAAS,CAAEE,SAAS,CAACF,SAFR,CAGbC,SAAS,CAAEC,SAAS,CAACD,SAHR,CAAf,CAMA,cAAeE,CAAAA,MAAf","sourcesContent":["import AuthStore from './AuthStore';\n\nimport TimeStore from './TimeStore'\nimport { create } from 'mobx-persist'\nimport { AsyncStorage } from 'react-native';\n//import FMClient from '../services/FMClient/Client';\nimport FilemakerClient from 'filemaker-api';\n\nconst hydrate = create({\n  storage: AsyncStorage,\n  jsonify: true\n})\n\nexport class RootStore {\n\n  timeStore: TimeStore;\n  authStore: AuthStore;\n\n  constructor() {\n    this.authStore = new AuthStore(this);\n    // this.api = new FilemakerClient('vhmsoft.com', 'vhmsoft_Lyes', this.authStore.getAuthHeader.bind(this.authStore))\n    this.timeStore = new TimeStore(this);\n    hydrate('auth', this.authStore)\n  }\n}\n\nexport const rootStore = new RootStore();\n\nconst stores = {\n  rootStore,\n  authStore: rootStore.authStore,\n  timeStore: rootStore.timeStore,\n}\n\nexport default stores;\n\n"]},"metadata":{},"sourceType":"module"}