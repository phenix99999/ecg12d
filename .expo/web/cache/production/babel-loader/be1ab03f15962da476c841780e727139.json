{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{StatusBar}from\"expo-status-bar\";import React from\"react\";import{SafeAreaProvider}from\"react-native-safe-area-context\";import useColorScheme from\"./src/hooks/useColorScheme\";import Navigation from\"./src/navigation\";import{Provider}from\"mobx-react\";import{getNavigationState}from\"./src/utils/PersistState\";import stores from\"./src/stores/index\";export default function App(){var colorScheme=useColorScheme();var _React$useState=React.useState(\"Logout\"),_React$useState2=_slicedToArray(_React$useState,2),routeName=_React$useState2[0],setRouteName=_React$useState2[1];global.fmServer=\"vhmsoft.com\";global.fmDatabase=\"vhmsoft\";React.useEffect(function(){var getRouteName=function getRouteName(){var routeName;return _regeneratorRuntime.async(function getRouteName$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(getNavigationState());case 2:routeName=_context.sent;setRouteName(routeName);case 4:case\"end\":return _context.stop();}}},null,null,null,Promise);};getRouteName();},[]);return React.createElement(Provider,stores,React.createElement(SafeAreaProvider,null,React.createElement(Navigation,{colorScheme:colorScheme,initialRouteName:routeName}),React.createElement(StatusBar,null)));}","map":{"version":3,"sources":["/Users/lyestamazouzt/Projects/CoffretsPrestige/App.tsx"],"names":["StatusBar","React","SafeAreaProvider","useColorScheme","Navigation","Provider","getNavigationState","stores","App","colorScheme","useState","routeName","setRouteName","global","fmServer","fmDatabase","useEffect","getRouteName"],"mappings":"6HAAA,OAASA,SAAT,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,gBAAT,KAAiC,gCAAjC,CAKA,MAAOC,CAAAA,cAAP,kCACA,MAAOC,CAAAA,UAAP,wBACA,OAASC,QAAT,KAAyB,YAAzB,CAEA,OAASC,kBAAT,gCAIA,MAAOC,CAAAA,MAAP,0BAGA,cAAe,SAASC,CAAAA,GAAT,EAAe,CAC1B,GAAMC,CAAAA,WAAW,CAAGN,cAAc,EAAlC,CAD0B,oBAGQF,KAAK,CAACS,QAAN,CAAmC,QAAnC,CAHR,oDAGnBC,SAHmB,qBAGRC,YAHQ,qBAK1BC,MAAM,CAACC,QAAP,CAAkB,aAAlB,CACAD,MAAM,CAACE,UAAP,CAAoB,SAApB,CAEAd,KAAK,CAACe,SAAN,CAAgB,UAAM,CAClB,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,wLACOX,kBAAkB,EADzB,SACXK,SADW,eAEjBC,YAAY,CAACD,SAAD,CAAZ,CAFiB,qEAArB,CAIAM,YAAY,GACf,CAND,CAMG,EANH,EAaA,MACI,qBAAC,QAAD,CAAcV,MAAd,CACI,oBAAC,gBAAD,MACI,oBAAC,UAAD,EAAY,WAAW,CAAEE,WAAzB,CAAsC,gBAAgB,CAAEE,SAAxD,EADJ,CAEI,oBAAC,SAAD,MAFJ,CADJ,CADJ,CAQH","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\n\nimport useCachedResources from \"./src/hooks/useCachedResources\";\nimport { AppLoading } from \"expo\";\n\nimport useColorScheme from \"./src/hooks/useColorScheme\";\nimport Navigation from \"./src/navigation\";\nimport { Provider } from \"mobx-react\";\n\nimport { getNavigationState } from \"./src/utils/PersistState\";\n\nimport Expo from \"expo\";\n\nimport stores from \"./src/stores/index\";\nimport { StyleProvider } from \"native-base\";\n\nexport default function App() {\n    const colorScheme = useColorScheme();\n\n    const [routeName, setRouteName] = React.useState<\"Login\" | \"Logout\">(\"Logout\");\n    //const [fontReady, setFontReady] = React.useState<boolean>(false);\n    global.fmServer = \"vhmsoft.com\";\n    global.fmDatabase = \"vhmsoft\";\n    \n    React.useEffect(() => {\n        const getRouteName = async () => {\n            const routeName = await getNavigationState();\n            setRouteName(routeName);\n        };\n        getRouteName();\n    }, []);\n\n    //const isLoadingComplete = useCachedResources();\n    //if (!isLoadingComplete || !routeName) {\n    //    return <AppLoading />;\n    //}\n\n    return (\n        <Provider {...stores}>\n            <SafeAreaProvider>\n                <Navigation colorScheme={colorScheme} initialRouteName={routeName} />\n                <StatusBar />\n            </SafeAreaProvider>\n        </Provider>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}